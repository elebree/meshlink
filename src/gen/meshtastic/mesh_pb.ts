// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file meshtastic/mesh.proto (package meshtastic, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Config_DeviceConfig_Role } from "./config_pb";
import { file_meshtastic_config } from "./config_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file meshtastic/mesh.proto.
 */
export const file_meshtastic_mesh: GenFile = /*@__PURE__*/
  fileDesc("ChVtZXNodGFzdGljL21lc2gucHJvdG8SCm1lc2h0YXN0aWMiigIKBFVzZXISCgoCaWQYASABKAkSEQoJbG9uZ19uYW1lGAIgASgJEhIKCnNob3J0X25hbWUYAyABKAkSEwoHbWFjYWRkchgEIAEoDEICGAESKwoIaHdfbW9kZWwYBSABKA4yGS5tZXNodGFzdGljLkhhcmR3YXJlTW9kZWwSEwoLaXNfbGljZW5zZWQYBiABKAgSMgoEcm9sZRgHIAEoDjIkLm1lc2h0YXN0aWMuQ29uZmlnLkRldmljZUNvbmZpZy5Sb2xlEhIKCnB1YmxpY19rZXkYCCABKAwSHAoPaXNfdW5tZXNzYWdhYmxlGAkgASgISACIAQFCEgoQX2lzX3VubWVzc2FnYWJsZSreEAoNSGFyZHdhcmVNb2RlbBIJCgVVTlNFVBAAEgwKCFRMT1JBX1YyEAESDAoIVExPUkFfVjEQAhISCg5UTE9SQV9WMl8xXzFQNhADEgkKBVRCRUFNEAQSDwoLSEVMVEVDX1YyXzAQBRIOCgpUQkVBTV9WMFA3EAYSCgoGVF9FQ0hPEAcSEAoMVExPUkFfVjFfMVAzEAgSCwoHUkFLNDYzMRAJEg8KC0hFTFRFQ19WMl8xEAoSDQoJSEVMVEVDX1YxEAsSGAoUTElMWUdPX1RCRUFNX1MzX0NPUkUQDBIMCghSQUsxMTIwMBANEgsKB05BTk9fRzEQDhISCg5UTE9SQV9WMl8xXzFQOBAPEg8KC1RMT1JBX1QzX1MzEBASFAoQTkFOT19HMV9FWFBMT1JFUhAREhEKDU5BTk9fRzJfVUxUUkEQEhINCglMT1JBX1RZUEUQExILCgdXSVBIT05FEBQSDgoKV0lPX1dNMTExMBAVEgsKB1JBSzI1NjAQFhITCg9IRUxURUNfSFJVXzM2MDEQFxIaChZIRUxURUNfV0lSRUxFU1NfQlJJREdFEBgSDgoKU1RBVElPTl9HMRAZEgwKCFJBSzExMzEwEBoSFAoQU0VOU0VMT1JBX1JQMjA0MBAbEhAKDFNFTlNFTE9SQV9TMxAcEg0KCUNBTkFSWU9ORRAdEg8KC1JQMjA0MF9MT1JBEB4SDgoKU1RBVElPTl9HMhAfEhEKDUxPUkFfUkVMQVlfVjEQIBIOCgpOUkY1Mjg0MERLECESBwoDUFBSECISDwoLR0VOSUVCTE9DS1MQIxIRCg1OUkY1Ml9VTktOT1dOECQSDQoJUE9SVERVSU5PECUSDwoLQU5EUk9JRF9TSU0QJhIKCgZESVlfVjEQJxIVChFOUkY1Mjg0MF9QQ0ExMDA1ORAoEgoKBkRSX0RFVhApEgsKB001U1RBQ0sQKhINCglIRUxURUNfVjMQKxIRCg1IRUxURUNfV1NMX1YzECwSEwoPQkVUQUZQVl8yNDAwX1RYEC0SFwoTQkVUQUZQVl85MDBfTkFOT19UWBAuEgwKCFJQSV9QSUNPEC8SGwoXSEVMVEVDX1dJUkVMRVNTX1RSQUNLRVIQMBIZChVIRUxURUNfV0lSRUxFU1NfUEFQRVIQMRIKCgZUX0RFQ0sQMhIOCgpUX1dBVENIX1MzEDMSEQoNUElDT01QVVRFUl9TMxA0Eg8KC0hFTFRFQ19IVDYyEDUSEgoORUJZVEVfRVNQMzJfUzMQNhIRCg1FU1AzMl9TM19QSUNPEDcSDQoJQ0hBVFRFUl8yEDgSHgoaSEVMVEVDX1dJUkVMRVNTX1BBUEVSX1YxXzAQORIgChxIRUxURUNfV0lSRUxFU1NfVFJBQ0tFUl9WMV8wEDoSCwoHVU5QSE9ORRA7EgwKCFREX0xPUkFDEDwSEwoPQ0RFQllURV9FT1JBX1MzED0SDwoLVFdDX01FU0hfVjQQPhIWChJOUkY1Ml9QUk9NSUNST19ESVkQPxIfChtSQURJT01BU1RFUl85MDBfQkFORElUX05BTk8QQBIcChhIRUxURUNfQ0FQU1VMRV9TRU5TT1JfVjMQQRIdChlIRUxURUNfVklTSU9OX01BU1RFUl9UMTkwEEISHQoZSEVMVEVDX1ZJU0lPTl9NQVNURVJfRTIxMxBDEh0KGUhFTFRFQ19WSVNJT05fTUFTVEVSX0UyOTAQRBIZChVIRUxURUNfTUVTSF9OT0RFX1QxMTQQRRIWChJTRU5TRUNBUF9JTkRJQ0FUT1IQRhITCg9UUkFDS0VSX1QxMDAwX0UQRxILCgdSQUszMTcyEEgSCgoGV0lPX0U1EEkSGgoWUkFESU9NQVNURVJfOTAwX0JBTkRJVBBKEhMKD01FMjVMUzAxXzRZMTBURBBLEhgKFFJQMjA0MF9GRUFUSEVSX1JGTTk1EEwSFQoRTTVTVEFDS19DT1JFQkFTSUMQTRIRCg1NNVNUQUNLX0NPUkUyEE4SDQoJUlBJX1BJQ08yEE8SEgoOTTVTVEFDS19DT1JFUzMQUBIRCg1TRUVFRF9YSUFPX1MzEFESCwoHTVMyNFNGMRBSEgwKCFRMT1JBX0M2EFMSDwoLV0lTTUVTSF9UQVAQVBINCglST1VUQVNUSUMQVRIMCghNRVNIX1RBQhBWEgwKCE1FU0hMSU5LEFcSEgoOWElBT19OUkY1Ml9LSVQQWBIQCgxUSElOS05PREVfTTEQWRIQCgxUSElOS05PREVfTTIQWhIPCgtUX0VUSF9FTElURRBbEhUKEUhFTFRFQ19TRU5TT1JfSFVCEFwSGgoWUkVTRVJWRURfRlJJRURfQ0hJQ0tFThBdEhYKEkhFTFRFQ19NRVNIX1BPQ0tFVBBeEhQKEFNFRUVEX1NPTEFSX05PREUQXxIYChROT01BRFNUQVJfTUVURU9SX1BSTxBgEg0KCUNST1dQQU5FTBBhEgsKB0xJTktfMzIQYhIYChRTRUVFRF9XSU9fVFJBQ0tFUl9MMRBjEh0KGVNFRUVEX1dJT19UUkFDS0VSX0wxX0VJTksQZBIUChBRV0FOVFpfVElOWV9BUk1TEGUSDgoKVF9ERUNLX1BSTxBmEhAKDFRfTE9SQV9QQUdFUhBnEh0KGUdBVDU2Ml9NRVNIX1RSSUFMX1RSQUNLRVIQaBIPCgtXSVNNRVNIX1RBRxBpEgsKB1JBSzMzMTIQahIQCgxUSElOS05PREVfTTUQaxIVChFIRUxURUNfTUVTSF9TT0xBUhBsEg8KC1RfRUNIT19MSVRFEG0SDQoJSEVMVEVDX1Y0EG4SDwoKUFJJVkFURV9IVxD/AUJfChNjb20uZ2Vla3N2aWxsZS5tZXNoQgpNZXNoUHJvdG9zWiJnaXRodWIuY29tL21lc2h0YXN0aWMvZ28vZ2VuZXJhdGVkqgIUTWVzaHRhc3RpYy5Qcm90b2J1ZnO6AgBiBnByb3RvMw", [file_meshtastic_config]);

/**
 *
 * Broadcast when a newly powered mesh node wants to find a node num it can use
 * Sent from the phone over bluetooth to set the user id for the owner of this node.
 * Also sent from nodes to each other when a new node signs on (so all clients can have this info)
 * The algorithm is as follows:
 * when a node starts up, it broadcasts their user and the normal flow is for all
 * other nodes to reply with their User as well (so the new node can build its nodedb)
 * If a node ever receives a User (not just the first broadcast) message where
 * the sender node number equals our node number, that indicates a collision has
 * occurred and the following steps should happen:
 * If the receiving node (that was already in the mesh)'s macaddr is LOWER than the
 * new User who just tried to sign in: it gets to keep its nodenum.
 * We send a broadcast message of OUR User (we use a broadcast so that the other node can
 * receive our message, considering we have the same id - it also serves to let
 * observers correct their nodedb) - this case is rare so it should be okay.
 * If any node receives a User where the macaddr is GTE than their local macaddr,
 * they have been vetoed and should pick a new random nodenum (filtering against
 * whatever it knows about the nodedb) and rebroadcast their User.
 * A few nodenums are reserved and will never be requested:
 * 0xff - broadcast
 * 0 through 3 - for future use
 *
 * @generated from message meshtastic.User
 */
export type User = Message<"meshtastic.User"> & {
  /**
   *
   * A globally unique ID string for this user.
   * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !<8 hexidecimal bytes>.
   * Note: app developers are encouraged to also use the following standard
   * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   *
   * A full name for this user, i.e. "Kevin Hester"
   *
   * @generated from field: string long_name = 2;
   */
  longName: string;

  /**
   *
   * A VERY short name, ideally two characters.
   * Suitable for a tiny OLED screen
   *
   * @generated from field: string short_name = 3;
   */
  shortName: string;

  /**
   *
   * Deprecated in Meshtastic 2.1.x
   * This is the addr of the radio.
   * Not populated by the phone, but added by the esp32 when broadcasting
   *
   * @generated from field: bytes macaddr = 4 [deprecated = true];
   * @deprecated
   */
  macaddr: Uint8Array;

  /**
   *
   * TBEAM, HELTEC, etc...
   * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
   * Apps will still need the string here for older builds
   * (so OTA update can find the right image), but if the enum is available it will be used instead.
   *
   * @generated from field: meshtastic.HardwareModel hw_model = 5;
   */
  hwModel: HardwareModel;

  /**
   *
   * In some regions Ham radio operators have different bandwidth limitations than others.
   * If this user is a licensed operator, set this flag.
   * Also, "long_name" should be their licence number.
   *
   * @generated from field: bool is_licensed = 6;
   */
  isLicensed: boolean;

  /**
   *
   * Indicates that the user's role in the mesh
   *
   * @generated from field: meshtastic.Config.DeviceConfig.Role role = 7;
   */
  role: Config_DeviceConfig_Role;

  /**
   *
   * The public key of the user's device.
   * This is sent out to other nodes on the mesh to allow them to compute a shared secret key.
   *
   * @generated from field: bytes public_key = 8;
   */
  publicKey: Uint8Array;

  /**
   *
   * Whether or not the node can be messaged
   *
   * @generated from field: optional bool is_unmessagable = 9;
   */
  isUnmessagable?: boolean;
};

/**
 * Describes the message meshtastic.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_meshtastic_mesh, 0);

/**
 *
 * Note: these enum names must EXACTLY match the string used in the device
 * bin/build-all.sh script.
 * Because they will be used to find firmware filenames in the android app for OTA updates.
 * To match the old style filenames, _ is converted to -, p is converted to .
 *
 * @generated from enum meshtastic.HardwareModel
 */
export enum HardwareModel {
  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: UNSET = 0;
   */
  UNSET = 0,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: TLORA_V2 = 1;
   */
  TLORA_V2 = 1,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: TLORA_V1 = 2;
   */
  TLORA_V1 = 2,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: TLORA_V2_1_1P6 = 3;
   */
  TLORA_V2_1_1P6 = 3,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: TBEAM = 4;
   */
  TBEAM = 4,

  /**
   *
   * The original heltec WiFi_Lora_32_V2, which had battery voltage sensing hooked to GPIO 13
   * (see HELTEC_V2 for the new version).
   *
   * @generated from enum value: HELTEC_V2_0 = 5;
   */
  HELTEC_V2_0 = 5,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: TBEAM_V0P7 = 6;
   */
  TBEAM_V0P7 = 6,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: T_ECHO = 7;
   */
  T_ECHO = 7,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: TLORA_V1_1P3 = 8;
   */
  TLORA_V1_1P3 = 8,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: RAK4631 = 9;
   */
  RAK4631 = 9,

  /**
   *
   * The new version of the heltec WiFi_Lora_32_V2 board that has battery sensing hooked to GPIO 37.
   * Sadly they did not update anything on the silkscreen to identify this board
   *
   * @generated from enum value: HELTEC_V2_1 = 10;
   */
  HELTEC_V2_1 = 10,

  /**
   *
   * Ancient heltec WiFi_Lora_32 board
   *
   * @generated from enum value: HELTEC_V1 = 11;
   */
  HELTEC_V1 = 11,

  /**
   *
   * New T-BEAM with ESP32-S3 CPU
   *
   * @generated from enum value: LILYGO_TBEAM_S3_CORE = 12;
   */
  LILYGO_TBEAM_S3_CORE = 12,

  /**
   *
   * RAK WisBlock ESP32 core: https://docs.rakwireless.com/Product-Categories/WisBlock/RAK11200/Overview/
   *
   * @generated from enum value: RAK11200 = 13;
   */
  RAK11200 = 13,

  /**
   *
   * B&Q Consulting Nano Edition G1: https://uniteng.com/wiki/doku.php?id=meshtastic:nano
   *
   * @generated from enum value: NANO_G1 = 14;
   */
  NANO_G1 = 14,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: TLORA_V2_1_1P8 = 15;
   */
  TLORA_V2_1_1P8 = 15,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: TLORA_T3_S3 = 16;
   */
  TLORA_T3_S3 = 16,

  /**
   *
   * B&Q Consulting Nano G1 Explorer: https://wiki.uniteng.com/en/meshtastic/nano-g1-explorer
   *
   * @generated from enum value: NANO_G1_EXPLORER = 17;
   */
  NANO_G1_EXPLORER = 17,

  /**
   *
   * B&Q Consulting Nano G2 Ultra: https://wiki.uniteng.com/en/meshtastic/nano-g2-ultra
   *
   * @generated from enum value: NANO_G2_ULTRA = 18;
   */
  NANO_G2_ULTRA = 18,

  /**
   *
   * LoRAType device: https://loratype.org/
   *
   * @generated from enum value: LORA_TYPE = 19;
   */
  LORA_TYPE = 19,

  /**
   *
   * wiphone https://www.wiphone.io/
   *
   * @generated from enum value: WIPHONE = 20;
   */
  WIPHONE = 20,

  /**
   *
   * WIO Tracker WM1110 family from Seeed Studio. Includes wio-1110-tracker and wio-1110-sdk
   *
   * @generated from enum value: WIO_WM1110 = 21;
   */
  WIO_WM1110 = 21,

  /**
   *
   * RAK2560 Solar base station based on RAK4630
   *
   * @generated from enum value: RAK2560 = 22;
   */
  RAK2560 = 22,

  /**
   *
   * Heltec HRU-3601: https://heltec.org/project/hru-3601/
   *
   * @generated from enum value: HELTEC_HRU_3601 = 23;
   */
  HELTEC_HRU_3601 = 23,

  /**
   *
   * Heltec Wireless Bridge
   *
   * @generated from enum value: HELTEC_WIRELESS_BRIDGE = 24;
   */
  HELTEC_WIRELESS_BRIDGE = 24,

  /**
   *
   * B&Q Consulting Station Edition G1: https://uniteng.com/wiki/doku.php?id=meshtastic:station
   *
   * @generated from enum value: STATION_G1 = 25;
   */
  STATION_G1 = 25,

  /**
   *
   * RAK11310 (RP2040 + SX1262)
   *
   * @generated from enum value: RAK11310 = 26;
   */
  RAK11310 = 26,

  /**
   *
   * Makerfabs SenseLoRA Receiver (RP2040 + RFM96)
   *
   * @generated from enum value: SENSELORA_RP2040 = 27;
   */
  SENSELORA_RP2040 = 27,

  /**
   *
   * Makerfabs SenseLoRA Industrial Monitor (ESP32-S3 + RFM96)
   *
   * @generated from enum value: SENSELORA_S3 = 28;
   */
  SENSELORA_S3 = 28,

  /**
   *
   * Canary Radio Company - CanaryOne: https://canaryradio.io/products/canaryone
   *
   * @generated from enum value: CANARYONE = 29;
   */
  CANARYONE = 29,

  /**
   *
   * Waveshare RP2040 LoRa - https://www.waveshare.com/rp2040-lora.htm
   *
   * @generated from enum value: RP2040_LORA = 30;
   */
  RP2040_LORA = 30,

  /**
   *
   * B&Q Consulting Station G2: https://wiki.uniteng.com/en/meshtastic/station-g2
   *
   * @generated from enum value: STATION_G2 = 31;
   */
  STATION_G2 = 31,

  /**
   *
   * ---------------------------------------------------------------------------
   * Less common/prototype boards listed here (needs one more byte over the air)
   * ---------------------------------------------------------------------------
   *
   * @generated from enum value: LORA_RELAY_V1 = 32;
   */
  LORA_RELAY_V1 = 32,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: NRF52840DK = 33;
   */
  NRF52840DK = 33,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: PPR = 34;
   */
  PPR = 34,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: GENIEBLOCKS = 35;
   */
  GENIEBLOCKS = 35,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: NRF52_UNKNOWN = 36;
   */
  NRF52_UNKNOWN = 36,

  /**
   *
   * TODO: REPLACE
   *
   * @generated from enum value: PORTDUINO = 37;
   */
  PORTDUINO = 37,

  /**
   *
   * The simulator built into the android app
   *
   * @generated from enum value: ANDROID_SIM = 38;
   */
  ANDROID_SIM = 38,

  /**
   *
   * Custom DIY device based on @NanoVHF schematics: https://github.com/NanoVHF/Meshtastic-DIY/tree/main/Schematics
   *
   * @generated from enum value: DIY_V1 = 39;
   */
  DIY_V1 = 39,

  /**
   *
   * nRF52840 Dongle : https://www.nordicsemi.com/Products/Development-hardware/nrf52840-dongle/
   *
   * @generated from enum value: NRF52840_PCA10059 = 40;
   */
  NRF52840_PCA10059 = 40,

  /**
   *
   * Custom Disaster Radio esp32 v3 device https://github.com/sudomesh/disaster-radio/tree/master/hardware/board_esp32_v3
   *
   * @generated from enum value: DR_DEV = 41;
   */
  DR_DEV = 41,

  /**
   *
   * M5 esp32 based MCU modules with enclosure, TFT and LORA Shields. All Variants (Basic, Core, Fire, Core2, CoreS3, Paper) https://m5stack.com/
   *
   * @generated from enum value: M5STACK = 42;
   */
  M5STACK = 42,

  /**
   *
   * New Heltec LoRA32 with ESP32-S3 CPU
   *
   * @generated from enum value: HELTEC_V3 = 43;
   */
  HELTEC_V3 = 43,

  /**
   *
   * New Heltec Wireless Stick Lite with ESP32-S3 CPU
   *
   * @generated from enum value: HELTEC_WSL_V3 = 44;
   */
  HELTEC_WSL_V3 = 44,

  /**
   *
   * New BETAFPV ELRS Micro TX Module 2.4G with ESP32 CPU
   *
   * @generated from enum value: BETAFPV_2400_TX = 45;
   */
  BETAFPV_2400_TX = 45,

  /**
   *
   * BetaFPV ExpressLRS "Nano" TX Module 900MHz with ESP32 CPU
   *
   * @generated from enum value: BETAFPV_900_NANO_TX = 46;
   */
  BETAFPV_900_NANO_TX = 46,

  /**
   *
   * Raspberry Pi Pico (W) with Waveshare SX1262 LoRa Node Module
   *
   * @generated from enum value: RPI_PICO = 47;
   */
  RPI_PICO = 47,

  /**
   *
   * Heltec Wireless Tracker with ESP32-S3 CPU, built-in GPS, and TFT
   * Newer V1.1, version is written on the PCB near the display.
   *
   * @generated from enum value: HELTEC_WIRELESS_TRACKER = 48;
   */
  HELTEC_WIRELESS_TRACKER = 48,

  /**
   *
   * Heltec Wireless Paper with ESP32-S3 CPU and E-Ink display
   *
   * @generated from enum value: HELTEC_WIRELESS_PAPER = 49;
   */
  HELTEC_WIRELESS_PAPER = 49,

  /**
   *
   * LilyGo T-Deck with ESP32-S3 CPU, Keyboard and IPS display
   *
   * @generated from enum value: T_DECK = 50;
   */
  T_DECK = 50,

  /**
   *
   * LilyGo T-Watch S3 with ESP32-S3 CPU and IPS display
   *
   * @generated from enum value: T_WATCH_S3 = 51;
   */
  T_WATCH_S3 = 51,

  /**
   *
   * Bobricius Picomputer with ESP32-S3 CPU, Keyboard and IPS display
   *
   * @generated from enum value: PICOMPUTER_S3 = 52;
   */
  PICOMPUTER_S3 = 52,

  /**
   *
   * Heltec HT-CT62 with ESP32-C3 CPU and SX1262 LoRa
   *
   * @generated from enum value: HELTEC_HT62 = 53;
   */
  HELTEC_HT62 = 53,

  /**
   *
   * EBYTE SPI LoRa module and ESP32-S3
   *
   * @generated from enum value: EBYTE_ESP32_S3 = 54;
   */
  EBYTE_ESP32_S3 = 54,

  /**
   *
   * Waveshare ESP32-S3-PICO with PICO LoRa HAT and 2.9inch e-Ink
   *
   * @generated from enum value: ESP32_S3_PICO = 55;
   */
  ESP32_S3_PICO = 55,

  /**
   *
   * CircuitMess Chatter 2 LLCC68 Lora Module and ESP32 Wroom
   * Lora module can be swapped out for a Heltec RA-62 which is "almost" pin compatible
   * with one cut and one jumper Meshtastic works
   *
   * @generated from enum value: CHATTER_2 = 56;
   */
  CHATTER_2 = 56,

  /**
   *
   * Heltec Wireless Paper, With ESP32-S3 CPU and E-Ink display
   * Older "V1.0" Variant, has no "version sticker"
   * E-Ink model is DEPG0213BNS800
   * Tab on the screen protector is RED
   * Flex connector marking is FPC-7528B
   *
   * @generated from enum value: HELTEC_WIRELESS_PAPER_V1_0 = 57;
   */
  HELTEC_WIRELESS_PAPER_V1_0 = 57,

  /**
   *
   * Heltec Wireless Tracker with ESP32-S3 CPU, built-in GPS, and TFT
   * Older "V1.0" Variant
   *
   * @generated from enum value: HELTEC_WIRELESS_TRACKER_V1_0 = 58;
   */
  HELTEC_WIRELESS_TRACKER_V1_0 = 58,

  /**
   *
   * unPhone with ESP32-S3, TFT touchscreen,  LSM6DS3TR-C accelerometer and gyroscope
   *
   * @generated from enum value: UNPHONE = 59;
   */
  UNPHONE = 59,

  /**
   *
   * Teledatics TD-LORAC NRF52840 based M.2 LoRA module
   * Compatible with the TD-WRLS development board
   *
   * @generated from enum value: TD_LORAC = 60;
   */
  TD_LORAC = 60,

  /**
   *
   * CDEBYTE EoRa-S3 board using their own MM modules, clone of LILYGO T3S3
   *
   * @generated from enum value: CDEBYTE_EORA_S3 = 61;
   */
  CDEBYTE_EORA_S3 = 61,

  /**
   *
   * TWC_MESH_V4
   * Adafruit NRF52840 feather express with SX1262, SSD1306 OLED and NEO6M GPS
   *
   * @generated from enum value: TWC_MESH_V4 = 62;
   */
  TWC_MESH_V4 = 62,

  /**
   *
   * NRF52_PROMICRO_DIY
   * Promicro NRF52840 with SX1262/LLCC68, SSD1306 OLED and NEO6M GPS
   *
   * @generated from enum value: NRF52_PROMICRO_DIY = 63;
   */
  NRF52_PROMICRO_DIY = 63,

  /**
   *
   * RadioMaster 900 Bandit Nano, https://www.radiomasterrc.com/products/bandit-nano-expresslrs-rf-module
   * ESP32-D0WDQ6 With SX1276/SKY66122, SSD1306 OLED and No GPS
   *
   * @generated from enum value: RADIOMASTER_900_BANDIT_NANO = 64;
   */
  RADIOMASTER_900_BANDIT_NANO = 64,

  /**
   *
   * Heltec Capsule Sensor V3 with ESP32-S3 CPU, Portable LoRa device that can replace GNSS modules or sensors
   *
   * @generated from enum value: HELTEC_CAPSULE_SENSOR_V3 = 65;
   */
  HELTEC_CAPSULE_SENSOR_V3 = 65,

  /**
   *
   * Heltec Vision Master T190 with ESP32-S3 CPU, and a 1.90 inch TFT display
   *
   * @generated from enum value: HELTEC_VISION_MASTER_T190 = 66;
   */
  HELTEC_VISION_MASTER_T190 = 66,

  /**
   *
   * Heltec Vision Master E213 with ESP32-S3 CPU, and a 2.13 inch E-Ink display
   *
   * @generated from enum value: HELTEC_VISION_MASTER_E213 = 67;
   */
  HELTEC_VISION_MASTER_E213 = 67,

  /**
   *
   * Heltec Vision Master E290 with ESP32-S3 CPU, and a 2.9 inch E-Ink display
   *
   * @generated from enum value: HELTEC_VISION_MASTER_E290 = 68;
   */
  HELTEC_VISION_MASTER_E290 = 68,

  /**
   *
   * Heltec Mesh Node T114 board with nRF52840 CPU, and a 1.14 inch TFT display, Ultimate low-power design,
   * specifically adapted for the Meshtatic project
   *
   * @generated from enum value: HELTEC_MESH_NODE_T114 = 69;
   */
  HELTEC_MESH_NODE_T114 = 69,

  /**
   *
   * Sensecap Indicator from Seeed Studio. ESP32-S3 device with TFT and RP2040 coprocessor
   *
   * @generated from enum value: SENSECAP_INDICATOR = 70;
   */
  SENSECAP_INDICATOR = 70,

  /**
   *
   * Seeed studio T1000-E tracker card. NRF52840 w/ LR1110 radio, GPS, button, buzzer, and sensors.
   *
   * @generated from enum value: TRACKER_T1000_E = 71;
   */
  TRACKER_T1000_E = 71,

  /**
   *
   * RAK3172 STM32WLE5 Module (https://store.rakwireless.com/products/wisduo-lpwan-module-rak3172)
   *
   * @generated from enum value: RAK3172 = 72;
   */
  RAK3172 = 72,

  /**
   *
   * Seeed Studio Wio-E5 (either mini or Dev kit) using STM32WL chip.
   *
   * @generated from enum value: WIO_E5 = 73;
   */
  WIO_E5 = 73,

  /**
   *
   * RadioMaster 900 Bandit, https://www.radiomasterrc.com/products/bandit-expresslrs-rf-module
   * SSD1306 OLED and No GPS
   *
   * @generated from enum value: RADIOMASTER_900_BANDIT = 74;
   */
  RADIOMASTER_900_BANDIT = 74,

  /**
   *
   * Minewsemi ME25LS01 (ME25LE01_V1.0). NRF52840 w/ LR1110 radio, buttons and leds and pins.
   *
   * @generated from enum value: ME25LS01_4Y10TD = 75;
   */
  ME25LS01_4Y10TD = 75,

  /**
   *
   * RP2040_FEATHER_RFM95
   * Adafruit Feather RP2040 with RFM95 LoRa Radio RFM95 with SX1272, SSD1306 OLED
   * https://www.adafruit.com/product/5714
   * https://www.adafruit.com/product/326
   * https://www.adafruit.com/product/938
   *  ^^^ short A0 to switch to I2C address 0x3C
   *
   *
   * @generated from enum value: RP2040_FEATHER_RFM95 = 76;
   */
  RP2040_FEATHER_RFM95 = 76,

  /**
   * M5 esp32 based MCU modules with enclosure, TFT and LORA Shields. All Variants (Basic, Core, Fire, Core2, CoreS3, Paper) https://m5stack.com/ 
   *
   * @generated from enum value: M5STACK_COREBASIC = 77;
   */
  M5STACK_COREBASIC = 77,

  /**
   * @generated from enum value: M5STACK_CORE2 = 78;
   */
  M5STACK_CORE2 = 78,

  /**
   * Pico2 with Waveshare Hat, same as Pico 
   *
   * @generated from enum value: RPI_PICO2 = 79;
   */
  RPI_PICO2 = 79,

  /**
   * M5 esp32 based MCU modules with enclosure, TFT and LORA Shields. All Variants (Basic, Core, Fire, Core2, CoreS3, Paper) https://m5stack.com/ 
   *
   * @generated from enum value: M5STACK_CORES3 = 80;
   */
  M5STACK_CORES3 = 80,

  /**
   * Seeed XIAO S3 DK
   *
   * @generated from enum value: SEEED_XIAO_S3 = 81;
   */
  SEEED_XIAO_S3 = 81,

  /**
   *
   * Nordic nRF52840+Semtech SX1262 LoRa BLE Combo Module. nRF52840+SX1262 MS24SF1
   *
   * @generated from enum value: MS24SF1 = 82;
   */
  MS24SF1 = 82,

  /**
   *
   * Lilygo TLora-C6 with the new ESP32-C6 MCU
   *
   * @generated from enum value: TLORA_C6 = 83;
   */
  TLORA_C6 = 83,

  /**
   *
   * WisMesh Tap
   * RAK-4631 w/ TFT in injection modled case
   *
   * @generated from enum value: WISMESH_TAP = 84;
   */
  WISMESH_TAP = 84,

  /**
   *
   * Similar to PORTDUINO but used by Routastic devices, this is not any
   * particular device and does not run Meshtastic's code but supports
   * the same frame format.
   * Runs on linux, see https://github.com/Jorropo/routastic
   *
   * @generated from enum value: ROUTASTIC = 85;
   */
  ROUTASTIC = 85,

  /**
   *
   * Mesh-Tab, esp32 based
   * https://github.com/valzzu/Mesh-Tab
   *
   * @generated from enum value: MESH_TAB = 86;
   */
  MESH_TAB = 86,

  /**
   *
   * MeshLink board developed by LoraItalia. NRF52840, eByte E22900M22S (Will also come with other frequencies), 25w MPPT solar charger (5v,12v,18v selectable), support for gps, buzzer, oled or e-ink display, 10 gpios, hardware watchdog
   * https://www.loraitalia.it
   *
   * @generated from enum value: MESHLINK = 87;
   */
  MESHLINK = 87,

  /**
   *
   * Seeed XIAO nRF52840 + Wio SX1262 kit
   *
   * @generated from enum value: XIAO_NRF52_KIT = 88;
   */
  XIAO_NRF52_KIT = 88,

  /**
   *
   * Elecrow ThinkNode M1 & M2
   * https://www.elecrow.com/wiki/ThinkNode-M1_Transceiver_Device(Meshtastic)_Power_By_nRF52840.html
   * https://www.elecrow.com/wiki/ThinkNode-M2_Transceiver_Device(Meshtastic)_Power_By_NRF52840.html (this actually uses ESP32-S3)
   *
   * @generated from enum value: THINKNODE_M1 = 89;
   */
  THINKNODE_M1 = 89,

  /**
   * @generated from enum value: THINKNODE_M2 = 90;
   */
  THINKNODE_M2 = 90,

  /**
   *
   * Lilygo T-ETH-Elite
   *
   * @generated from enum value: T_ETH_ELITE = 91;
   */
  T_ETH_ELITE = 91,

  /**
   *
   * Heltec HRI-3621 industrial probe
   *
   * @generated from enum value: HELTEC_SENSOR_HUB = 92;
   */
  HELTEC_SENSOR_HUB = 92,

  /**
   *
   * Reserved Fried Chicken ID for future use
   *
   * @generated from enum value: RESERVED_FRIED_CHICKEN = 93;
   */
  RESERVED_FRIED_CHICKEN = 93,

  /**
   *
   * Heltec Magnetic Power Bank with Meshtastic compatible
   *
   * @generated from enum value: HELTEC_MESH_POCKET = 94;
   */
  HELTEC_MESH_POCKET = 94,

  /**
   *
   * Seeed Solar Node
   *
   * @generated from enum value: SEEED_SOLAR_NODE = 95;
   */
  SEEED_SOLAR_NODE = 95,

  /**
   *
   * NomadStar Meteor Pro https://nomadstar.ch/
   *
   * @generated from enum value: NOMADSTAR_METEOR_PRO = 96;
   */
  NOMADSTAR_METEOR_PRO = 96,

  /**
   *
   * Elecrow CrowPanel Advance models, ESP32-S3 and TFT with SX1262 radio plugin
   *
   * @generated from enum value: CROWPANEL = 97;
   */
  CROWPANEL = 97,

  /**
   *
   * Lilygo LINK32 board with sensors
   *
   * @generated from enum value: LINK_32 = 98;
   */
  LINK_32 = 98,

  /**
   *
   * Seeed Tracker L1
   *
   * @generated from enum value: SEEED_WIO_TRACKER_L1 = 99;
   */
  SEEED_WIO_TRACKER_L1 = 99,

  /**
   *
   * Seeed Tracker L1 EINK driver
   *
   * @generated from enum value: SEEED_WIO_TRACKER_L1_EINK = 100;
   */
  SEEED_WIO_TRACKER_L1_EINK = 100,

  /**
   *
   * Reserved ID for future and past use
   *
   * @generated from enum value: QWANTZ_TINY_ARMS = 101;
   */
  QWANTZ_TINY_ARMS = 101,

  /**
   *
   * Lilygo T-Deck Pro
   *
   * @generated from enum value: T_DECK_PRO = 102;
   */
  T_DECK_PRO = 102,

  /**
   *
   * Lilygo TLora Pager
   *
   * @generated from enum value: T_LORA_PAGER = 103;
   */
  T_LORA_PAGER = 103,

  /**
   *
   * GAT562 Mesh Trial Tracker
   *
   * @generated from enum value: GAT562_MESH_TRIAL_TRACKER = 104;
   */
  GAT562_MESH_TRIAL_TRACKER = 104,

  /**
   *
   * RAKwireless WisMesh Tag
   *
   * @generated from enum value: WISMESH_TAG = 105;
   */
  WISMESH_TAG = 105,

  /**
   *
   * RAKwireless WisBlock Core RAK3312 https://docs.rakwireless.com/product-categories/wisduo/rak3112-module/overview/
   *
   * @generated from enum value: RAK3312 = 106;
   */
  RAK3312 = 106,

  /**
   *
   * Elecrow ThinkNode M5 https://www.elecrow.com/wiki/ThinkNode_M5_Meshtastic_LoRa_Signal_Transceiver_ESP32-S3.html
   *
   * @generated from enum value: THINKNODE_M5 = 107;
   */
  THINKNODE_M5 = 107,

  /**
   *
   * MeshSolar is an integrated power management and communication solution designed for outdoor low-power devices.
   * https://heltec.org/project/meshsolar/
   *
   * @generated from enum value: HELTEC_MESH_SOLAR = 108;
   */
  HELTEC_MESH_SOLAR = 108,

  /**
   *
   * Lilygo T-Echo Lite
   *
   * @generated from enum value: T_ECHO_LITE = 109;
   */
  T_ECHO_LITE = 109,

  /**
   *
   * New Heltec LoRA32 with ESP32-S3 CPU
   *
   * @generated from enum value: HELTEC_V4 = 110;
   */
  HELTEC_V4 = 110,

  /**
   *
   * ------------------------------------------------------------------------------------------------------------------------------------------
   * Reserved ID For developing private Ports. These will show up in live traffic sparsely, so we can use a high number. Keep it within 8 bits.
   * ------------------------------------------------------------------------------------------------------------------------------------------
   *
   * @generated from enum value: PRIVATE_HW = 255;
   */
  PRIVATE_HW = 255,
}

/**
 * Describes the enum meshtastic.HardwareModel.
 */
export const HardwareModelSchema: GenEnum<HardwareModel> = /*@__PURE__*/
  enumDesc(file_meshtastic_mesh, 0);

